//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KONTROLNAYA_2
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public partial class list_of_postcards
    {
        public int id_postcards { get; set; }
        public string name_sender { get; set; }
        public string name_recipient { get; set; }
        public string adress { get; set; }
        public string text { get; set; }

        PostcardListEntities db = new PostcardListEntities();
        public  static list_of_postcards postcardss(string sender, string recipient, string adress, string text)
        {
            PostcardListEntities db = new PostcardListEntities();
            list_of_postcards postcards = new list_of_postcards();
            if (db.list_of_postcards.Count() == 0)
            {
                postcards.id_postcards = 1;
            }
            else { postcards.id_postcards = db.list_of_postcards.Max(p => p.id_postcards); }
            postcards.name_sender =sender;
            postcards.name_recipient =recipient;
            postcards.text = text;
            postcards.adress = adress;
            return postcards;
        }
        //static string ProverkaName( string a) 
        //{
        //    string newA = "";
        //    for (int i = 0; i < a.Length; )
        //    {
        //        if (i == 0) { newA += a[i].ToString().ToUpper(); i++; }
        //        else if (a[i] == ' ') { i++; newA += a[i].ToString().ToUpper(); i++; }
        //        else newA += a[i];
        //    }
        //    return newA;
        //}
        public static bool ProverkaAdress(string a)
        {
            if (a.Contains("@") && a.Contains(".")) { return true; }
            else if (a.Contains("@.")) return false;
            else return false;
        }
        public void Save(list_of_postcards postcards) 
        {
            db.list_of_postcards.Add(postcards);
            db.SaveChanges();
        }
        public static List<dynamic> Return() 
        {
            PostcardListEntities db = new PostcardListEntities();
            var w = (from i in db.list_of_postcards
                     select new { i.name_recipient, i.adress }).ToList<dynamic>();
            return w;
        }
    }
}
